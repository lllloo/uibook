{"version":3,"file":"Checkout.stories-558dd4c2.js","sources":["../../src/components/form/BaseCheckout.vue"],"sourcesContent":["<template>\n  <label\n    class=\"base-checkout\"\n    :class=\"{\n      'base-checkout--small': small,\n      'base-checkout--large': large,\n      'out-line': outLine,\n      'is-checked': type === 'boolean' ? syncValue : syncValue.includes(value)\n    }\"\n  >\n    <div class=\"input-wrap\">\n      <input v-model=\"syncValue\" :value=\"value\" type=\"checkbox\" />\n      <div class=\"checkbox\">\n        <i class=\"fas fa-check\" />\n      </div>\n    </div>\n    <div class=\"label\">\n      {{ label }}\n    </div>\n  </label>\n</template>\n\n<script setup>\nconst props = defineProps({\n  label: {\n    type: String,\n    default: ''\n  },\n  modelValue: {\n    type: [Array, Boolean],\n    default: false\n  },\n  value: {\n    type: String,\n    default: ''\n  },\n  small: {\n    type: Boolean,\n    default: false\n  },\n  large: {\n    type: Boolean,\n    default: false\n  },\n  outLine: {\n    type: Boolean,\n    default: false\n  }\n})\nconst emit = defineEmits(['update:modelValue'])\nconst syncValue = computed({\n  get: () => props.modelValue,\n  set: (val) => emit('update:modelValue', val)\n})\n\nvar type = ref(typeof props.modelValue)\n</script>\n\n<style lang=\"scss\" scoped>\n.base-checkout {\n  display: inline-flex;\n  font-size: var(--input-font-size);\n\n  height: var(--input-height);\n\n  &--small {\n    --input-height: var(--input-small-height);\n  }\n\n  &--large {\n    --input-height: var(--input-large-height);\n  }\n  &.out-line {\n    border-radius: var(--base-border-radius);\n    padding: 0 10px;\n    border: 1px solid var(--primary-color);\n  }\n\n  &:not(.is-checked) {\n    .input-wrap {\n      .checkbox {\n        border: 1px solid #c8cacb;\n        background: #fff;\n\n        > svg {\n          display: none;\n        }\n      }\n    }\n  }\n\n  .input-wrap {\n    display: flex;\n    align-items: center;\n\n    .checkbox {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      width: 20px;\n      height: 20px;\n      margin-right: 5px;\n      border: 1px solid var(--primary-color);\n      overflow: hidden;\n      border-radius: var(--base-border-radius);\n      background: var(--primary-color);\n      color: #fff;\n    }\n  }\n  .label {\n    display: flex;\n    align-items: center;\n  }\n\n  input {\n    opacity: 0;\n    outline: none;\n    position: absolute;\n    margin: 0;\n    width: 0;\n    height: 0;\n    z-index: -1;\n  }\n}\n</style>\n"],"names":["syncValue","computed","props","val","emit","type","ref"],"mappings":"+rBAkDAA,EAAAC,EAAA,CACA,IAAA,IAAAC,EAAA,WACA,IAAAC,GAAAC,EAAA,oBAAAD,CAAA,CACA,CAAA,EAEA,IAAAE,EAAAC,EAAA,OAAAJ,EAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}